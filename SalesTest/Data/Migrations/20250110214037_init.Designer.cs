// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesTest.Data;

#nullable disable

namespace SalesTest.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250110214037_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("SalesTest.Models.Buyer", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("SalesTest.Models.Invoice", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("TEXT");

                    b.Property<uint>("ProductQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SaleId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("SalesPoinId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("SalesTest.Models.Product", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BarQode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SalesTest.Models.ProvidedProducts", b =>
                {
                    b.Property<ulong>("SalesPointId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("ProductQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("SalesPointId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProvidedProducts");
                });

            modelBuilder.Entity("SalesTest.Models.Sale", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("BuyerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("SalesPointId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("SalesPointId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("SalesTest.Models.SalesPoint", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SalesPoints");
                });

            modelBuilder.Entity("SalesTest.Models.Invoice", b =>
                {
                    b.HasOne("SalesTest.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalesTest.Models.Sale", null)
                        .WithMany("SalesData")
                        .HasForeignKey("SaleId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SalesTest.Models.ProvidedProducts", b =>
                {
                    b.HasOne("SalesTest.Models.Product", "Product")
                        .WithMany("ProvidedProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SalesTest.Models.SalesPoint", "SalesPoint")
                        .WithMany("ProvidedProducts")
                        .HasForeignKey("SalesPointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SalesPoint");
                });

            modelBuilder.Entity("SalesTest.Models.Sale", b =>
                {
                    b.HasOne("SalesTest.Models.Buyer", "Buyer")
                        .WithMany("Purchases")
                        .HasForeignKey("BuyerId");

                    b.HasOne("SalesTest.Models.SalesPoint", "SalesPoint")
                        .WithMany()
                        .HasForeignKey("SalesPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("SalesPoint");
                });

            modelBuilder.Entity("SalesTest.Models.Buyer", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("SalesTest.Models.Product", b =>
                {
                    b.Navigation("ProvidedProducts");
                });

            modelBuilder.Entity("SalesTest.Models.Sale", b =>
                {
                    b.Navigation("SalesData");
                });

            modelBuilder.Entity("SalesTest.Models.SalesPoint", b =>
                {
                    b.Navigation("ProvidedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
